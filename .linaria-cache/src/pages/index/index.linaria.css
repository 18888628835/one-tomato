.w1xpvx4y .banner{height:300rpx;}.w1xpvx4y .banner image{height:100%;width:100%;}.w1xpvx4y .iconWrapper{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;text-align:center;}.w1xpvx4y .iconWrapper > View{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.w1xpvx4y .iconWrapper > View .iconfont{width:100rpx;font-size:50rpx;border-radius:50%;background-color:#eb442c;color:white;text-align:center;line-height:100rpx;margin:10rpx 0;}.w1xpvx4y .iconWrapper > View > Text:nth-child(2){font-size:26rpx;}.w1xpvx4y .Recommend{padding:30rpx;}.w1xpvx4y .Recommend .scrollView{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:300rpx;}.w1xpvx4y .Recommend .scrollView .Recommend-item{width:200rpx;margin:20rpx 20rpx 10rpx 0;}.w1xpvx4y .Recommend .scrollView .Recommend-item image{height:200rpx;width:200rpx;}.w1xpvx4y .Recommend .scrollView text{font-size:26rpx;display:-webkit-box;overflow:hidden;-webkit-line-clamp:2;-webkit-box-orient:vertical;text-overflow:ellipsis;}.w1xpvx4y .hotList{padding:30rpx;}.w1xpvx4y .hotList .hotList-swiper{background-color:#fbfbfb;height:400rpx;}.w1xpvx4y .hotList .title{font-size:30rpx;line-height:80rpx;}.w1xpvx4y .hotList .music-item{margin-bottom:20rpx;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.w1xpvx4y .hotList .music-item .count{height:100rpx;width:100rpx;line-height:100rpx;text-align:center;}.w1xpvx4y .hotList .music-item > image{height:100rpx;width:100rpx;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlcy9pbmRleC9pbmRleC50c3giXSwibmFtZXMiOlsiLncxeHB2eDR5Il0sIm1hcHBpbmdzIjoiQUFlTUEiLCJmaWxlIjoic3JjL3BhZ2VzL2luZGV4L2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICBWaWV3LFxuICBUZXh0LFxuICBJbWFnZSxcbiAgU3dpcGVyLFxuICBTd2lwZXJJdGVtLFxuICBTY3JvbGxWaWV3LFxufSBmcm9tIFwiQHRhcm9qcy9jb21wb25lbnRzXCI7XG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwibGluYXJpYS9yZWFjdFwiO1xuaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gXCIuLi8uLi91dGlscy9yZXF1ZXN0XCI7XG5pbXBvcnQgTXlJY29uIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2N1c3RvbV9ob29rcy9NeUljb25cIjtcbmltcG9ydCBUaXRsZUhlYWRlciBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9jdXN0b21faG9va3MvVGl0bGVIZWFkZXJcIjtcbmltcG9ydCBUYXJvLCB7IHVzZVNoYXJlQXBwTWVzc2FnZSB9IGZyb20gXCJAdGFyb2pzL3Rhcm9cIjtcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZChWaWV3KWBcbiAgLyog6L2u5pKt5Yy65Z+fICovXG4gIC5iYW5uZXIge1xuICAgIGhlaWdodDogMzAwcnB4O1xuICAgIGltYWdlIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxuICAvKiDlm77moIflr7zoiKogKi9cbiAgLmljb25XcmFwcGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICA+IFZpZXcge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLmljb25mb250IHtcbiAgICAgICAgd2lkdGg6IDEwMHJweDtcbiAgICAgICAgZm9udC1zaXplOiA1MHJweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWI0NDJjO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEwMHJweDtcbiAgICAgICAgbWFyZ2luOiAxMHJweCAwO1xuICAgICAgfVxuICAgICAgPiBUZXh0Om50aC1jaGlsZCgyKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjZycHg7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8qIOaOqOiNkOatjOabsiAqL1xuICAuUmVjb21tZW5kIHtcbiAgICBwYWRkaW5nOiAzMHJweDtcbiAgICAuc2Nyb2xsVmlldyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgaGVpZ2h0OiAzMDBycHg7XG4gICAgICAuUmVjb21tZW5kLWl0ZW0ge1xuICAgICAgICB3aWR0aDogMjAwcnB4O1xuICAgICAgICBtYXJnaW46IDIwcnB4IDIwcnB4IDEwcnB4IDA7XG4gICAgICB9XG4gICAgICAuUmVjb21tZW5kLWl0ZW0gaW1hZ2Uge1xuICAgICAgICBoZWlnaHQ6IDIwMHJweDtcbiAgICAgICAgd2lkdGg6IDIwMHJweDtcbiAgICAgIH1cbiAgICAgIHRleHQge1xuICAgICAgICBmb250LXNpemU6IDI2cnB4O1xuICAgICAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLyog54Ot5q2M5o6S6KGM5qacICovXG4gIC5ob3RMaXN0IHtcbiAgICBwYWRkaW5nOiAzMHJweDtcbiAgICAuaG90TGlzdC1zd2lwZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZmJmYjtcbiAgICAgIGhlaWdodDogNDAwcnB4O1xuICAgIH1cbiAgICAudGl0bGUge1xuICAgICAgZm9udC1zaXplOiAzMHJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiA4MHJweDtcbiAgICB9XG5cbiAgICAubXVzaWMtaXRlbSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHJweDtcbiAgICAgIC5jb3VudCB7XG4gICAgICAgIGhlaWdodDogMTAwcnB4O1xuICAgICAgICB3aWR0aDogMTAwcnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTAwcnB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB9XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgID4gaW1hZ2Uge1xuICAgICAgICBoZWlnaHQ6IDEwMHJweDtcbiAgICAgICAgd2lkdGg6IDEwMHJweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbmA7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbmRleCgpIHtcbiAgdXNlU2hhcmVBcHBNZXNzYWdlKChyZXMpID0+IHtcbiAgICBpZiAocmVzLmZyb20gPT09IFwibWVudVwiKSB7XG4gICAgICByZXR1cm4geyB0aXRsZTogXCLkuIDkuKrlpb3njqnnmoTlsI/nqIvluo9cIiB9O1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IFtCYW5uZXJzLCBzZXRCYW5uZXJzXSA9IHVzZVN0YXRlPGFueVtdPihbXSk7XG4gIGNvbnN0IFtyZWNvbW1lbnRkTGlzdCwgc2V0UmVjb21tZW50ZExpc3RdID0gdXNlU3RhdGU8YW55W10+KFtdKTtcbiAgY29uc3QgW3RvcExpc3QsIHNldFRvcExpc3RdID0gdXNlU3RhdGU8YW55W10+KFtdKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAoYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgcmVxdWVzdChcIi9iYW5uZXJcIiwgeyB0eXBlOiAyIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBzZXRCYW5uZXJzKHJlcy5iYW5uZXJzKTtcbiAgICAgIH0pO1xuICAgICAgYXdhaXQgcmVxdWVzdChcIi9wZXJzb25hbGl6ZWRcIiwgeyBsaW1pdDogMTAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHNldFJlY29tbWVudGRMaXN0KHJlcy5yZXN1bHQpO1xuICAgICAgfSk7XG4gICAgICBsZXQgdG9wOiBhbnlbXSA9IFtdO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgYXdhaXQgcmVxdWVzdChcIi90b3AvbGlzdFwiLCB7IGlkeDogaSB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjb25zdCBpdGVtID0ge1xuICAgICAgICAgICAgbmFtZTogcmVzLnBsYXlsaXN0Lm5hbWUsXG4gICAgICAgICAgICB0cmFja3M6IHJlcy5wbGF5bGlzdC50cmFja3Muc2xpY2UoMCwgMyksXG4gICAgICAgICAgfTtcbiAgICAgICAgICB0b3AucHVzaChpdGVtKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBzZXRUb3BMaXN0KHRvcCk7XG4gICAgfSkoKTtcbiAgfSwgW10pO1xuICByZXR1cm4gKFxuICAgIDxXcmFwcGVyPlxuICAgICAgey8qIOi9ruaSreWMuuWfnyAqL31cbiAgICAgIDxTd2lwZXJcbiAgICAgICAgY2xhc3NOYW1lPVwiYmFubmVyXCJcbiAgICAgICAgaW5kaWNhdG9yRG90c1xuICAgICAgICBpbmRpY2F0b3JDb2xvcj1cIml2b3J5XCJcbiAgICAgICAgaW5kaWNhdG9yQWN0aXZlQ29sb3I9XCIjZDQzYzMzXCJcbiAgICAgICAgYXV0b3BsYXlcbiAgICAgID5cbiAgICAgICAge0Jhbm5lcnMubWFwKCh7IHBpYywgaWQgfSkgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8U3dpcGVySXRlbSBrZXk9e2lkfT5cbiAgICAgICAgICAgICAgPEltYWdlIG1vZGU9XCJzY2FsZVRvRmlsbFwiIHNyYz17cGljfSAvPjtcbiAgICAgICAgICAgIDwvU3dpcGVySXRlbT5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvU3dpcGVyPlxuICAgICAgey8qIOWbvuagh+WvvOiIquWMuuWfnyAqL31cbiAgICAgIDxWaWV3IGNsYXNzTmFtZT1cImljb25XcmFwcGVyXCI+XG4gICAgICAgIHtbXG4gICAgICAgICAgW1wicGFpeGluZ2JhbmdcIiwgXCLmjpLooYzmppxcIl0sXG4gICAgICAgICAgW1wiZ2VkYW5cIiwgXCLmrYzljZVcIl0sXG4gICAgICAgICAgW1wiZGlhbnRhaVwiLCBcIueUteWPsFwiXSxcbiAgICAgICAgICBbXCJ6aGlib2JvZmFuZ3NoZXhpYW5namlndWFua2FubWlhbnhpbmdcIiwgXCLnm7Tmkq1cIl0sXG4gICAgICAgICAgW1widHVpamlhblwiLCBcIuavj+aXpeaOqOiNkFwiLCBcIi9wYWdlcy9yZWNvbW1lbmQvcmVjb21tZW5kXCJdLFxuICAgICAgICBdLm1hcCgoaXRlbSkgPT4gKFxuICAgICAgICAgIDxNeUljb25cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgVGFyby5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgICAgICAgICB1cmw6IGl0ZW1bMl0sXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGtleT17aXRlbVswXX1cbiAgICAgICAgICAgIGljb25OYW1lPXtpdGVtWzBdfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtpdGVtWzFdfVxuICAgICAgICAgIDwvTXlJY29uPlxuICAgICAgICApKX1cbiAgICAgIDwvVmlldz5cbiAgICAgIHsvKiDmjqjojZDmrYzmm7IgKi99XG4gICAgICA8VmlldyBjbGFzc05hbWU9XCJSZWNvbW1lbmRcIj5cbiAgICAgICAgPFRpdGxlSGVhZGVyIHRpdGxlPVwi5o6o6I2Q5q2M5puyXCIgdGV4dD1cIuS4uuS9oOeyvuW/g+aOqOiNkFwiIC8+XG4gICAgICAgIDxTY3JvbGxWaWV3IHNjcm9sbFggZW5hYmxlRmxleCBjbGFzc05hbWU9XCJzY3JvbGxWaWV3XCI+XG4gICAgICAgICAge3JlY29tbWVudGRMaXN0Lm1hcCgoeyBpZCwgcGljVXJsLCBuYW1lIH0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxWaWV3IGtleT17aWR9IGNsYXNzTmFtZT1cIlJlY29tbWVuZC1pdGVtXCI+XG4gICAgICAgICAgICAgICAgPEltYWdlIG1vZGU9XCJzY2FsZVRvRmlsbFwiIHNyYz17cGljVXJsfSAvPlxuICAgICAgICAgICAgICAgIDxUZXh0PntuYW1lfTwvVGV4dD5cbiAgICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9TY3JvbGxWaWV3PlxuICAgICAgPC9WaWV3PlxuICAgICAgPFZpZXcgY2xhc3NOYW1lPVwiaG90TGlzdFwiPlxuICAgICAgICA8VGl0bGVIZWFkZXIgey4uLnsgdGl0bGU6IFwi5o6S6KGM5qacXCIsIHRleHQ6IFwi54Ot5q2M6aOO5ZCR5qCHXCIgfX0gLz5cbiAgICAgICAgPFN3aXBlciBuZXh0LW1hcmdpbj1cIjUwcnB4XCIgY2xhc3NOYW1lPVwiaG90TGlzdC1zd2lwZXJcIj5cbiAgICAgICAgICB7dG9wTGlzdC5tYXAoKHsgbmFtZSwgdHJhY2tzIH0sIGtleSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgPFN3aXBlckl0ZW0ga2V5PXtuYW1lICsga2V5fT5cbiAgICAgICAgICAgICAgICA8VmlldyBjbGFzc05hbWU9XCJ0aXRsZVwiPntuYW1lfTwvVmlldz5cbiAgICAgICAgICAgICAgICB7dHJhY2tzLm1hcCgoeyBpZCwgYWwgfSwgaykgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgPFZpZXcga2V5PXtpZH0gY2xhc3NOYW1lPVwibXVzaWMtaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxJbWFnZSBzcmM9e2FsLnBpY1VybH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBjbGFzc05hbWU9XCJjb3VudFwiPntrICsgMX08L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgPFRleHQ+e2FsLm5hbWV9PC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICA8L1N3aXBlckl0ZW0+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pfVxuICAgICAgICA8L1N3aXBlcj5cbiAgICAgIDwvVmlldz5cbiAgICA8L1dyYXBwZXI+XG4gICk7XG59XG4iXX0=*/